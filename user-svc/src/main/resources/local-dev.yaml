spring:
  security:
    oauth2:
      client:
        provider:
          auth-service-external:
            authorization-uri: http://localhost:8000/api/v1/auth/oauth2/authorize
            token-uri: http://localhost:8000/api/v1/auth/oauth2/token
            jwk-set-uri: http://localhost:8000/api/v1/auth/oauth2/jwks
  config:
    activate:
      on-profile: local-dev
  datasource:
    url: jdbc:postgresql://share-db:5432/user-svc-db
    username: 'user-svc-user'
    password: '{cipher}0579337b871cd41ba98c4875971fa8eca89a6a6902e15b6cf75f711c299912285e825d81331fa61ec4317b6306c3b29d'
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto:  update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  endpoint:
    health:
      show-details: always
logging:
  level:
    org.springframework.security: DEBUG
    com.example.userservice.security: DEBUG
    com.example.userservice.exception: ERROR
    com.example.userservice.service: DEBUG
  pattern:
    level:  "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
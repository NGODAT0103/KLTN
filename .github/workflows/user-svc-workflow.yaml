on:
  push:
  pull_request:
#    branches:
#      - "features/**"
#    paths:
#      - "user-svc/**"
#  pull_request:
#    branches:
#      - "features/**"
#    paths:
#      - "user-svc/**"
jobs:
#  push:
#    name: user-svc-push
#    if: github.event_name == 'push'
#    uses: ./.github/workflows/ci-push-workflow-call.yaml
#    with:
#      SERVICE_NAME: user-svc
#      SERVICE_PORT: 8002
#    secrets: inherit

  pr-integration-test:
    name: user-svc-integration-test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    services:
      redis-svc:
          image: redis:6.2.6
          ports:
          - 6379:6379
      share-db:
        ports:
          - 5432:5432
        image: postgres:16.3-bullseye
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
    steps:
      - name: Init sql
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          INIT_SQL: ${{ secrets.INIT_SQL }}
        run: |
          echo $INIT_SQL > /tmp/init.sql
          docker exec -i share-db psql -U $POSTGRES_USER -d $POSTGRES_DB < /tmp/init.sql
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Cache Maven packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-v1-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-v1-
      - name: Running integration test
        working-directory: ${{inputs.SERVICE_NAME}}
        env:
          ENCRYPT_KEY: ${{secrets.ENCRYPT_KEY}}
        run: mvn test -Dtest=*IntegrationTest

  pr-push-image:
    name: user-svc-pr
    if: github.event_name == 'pull_request'
    needs: [pr-integration-test]
    uses: ./.github/workflows/ci-pr-workflow-call.yaml
    with:
      SERVICE_NAME: user-svc
      SERVICE_PORT: 8002
    secrets: inherit
name: ci-commit-workflow
on:
  workflow_call:
    inputs:
      SERVICE_NAME:
        description: "name of the service to trigger the CI"
        required: true
        type: string
      SERVICE_PORT:
        description: "port of the service to trigger the CI"
        required: true
        type: string
jobs:
  integration-test:
    name: running integration test
    runs-on: ubuntu-latest
    container:
      image: maven:3.9.8-eclipse-temurin-17-alpine
    services:
      share-db:
        image: postgres:16.3-bullseye
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: set up cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Running integration test
        working-directory: ${{inputs.SERVICE_NAME}}
        env:
          ENCRYPT_KEY: ${{secrets.ENCRYPT_KEY}}
        run: mvn test -q -Dtest="**.integration_test.**"


  build-and-push:
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    permissions:
      contents: read
      packages: write
    needs: [integration-test]
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up buildx
        uses: docker/setup-buildx-action@v3.4.0
      - name: docker login credential
        uses: docker/login-action@v3.2.0
        with:
          logout: false
          registry: ghcr.io
          username: ${{github.repository_owner}}
          password: ${{secrets.GITHUB_TOKEN}}


      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: ghcr.io/ngodat0103/yamp/${{inputs.SERVICE_NAME}}
      - name: build and push
        uses: docker/build-push-action@v6.3.0
        with:
          context: ${{inputs.SERVICE_NAME}}
          file: Dockerfile-For-CI
          push: true
          tags: ${{steps.meta.outputs.tags}}
          labels: ${{steps.meta.outputs.labels}}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
          build-args: |
            SERVICE_NAME=${{inputs.SERVICE_NAME}}
            SERVICE_PORT=${{inputs.SERVICE_PORT}}

  security_check:
    name: Security check for docker image
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Scan security
        id: generate-report
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{needs.build-and-push.outputs.tags}}
          severity: HIGH,CRITICAL
          vuln-type: os,library
          exit-code: 1
          format: template
          template: '@/contrib/html.tpl'
          output: ${{inputs.SERVICE_NAME}}-report-${{github.sha}}.html
        env:
          TRIVY_USERNAME: ${{github.repository_owner}}
          TRIVY_PASSWORD: ${{secrets.GITHUB_TOKEN}}
      - name: Upload ${{inputs.SERVICE_NAME}} security report to artifact tab
        if: ${{steps.generate-report.conclusion == 'failure'}}
        uses: actions/upload-artifact@v4.3.4
        with:
          name: ${{inputs.SERVICE_NAME}}-report-${{github.sha}}.html
          if-no-files-found: warn
          path: ${{inputs.SERVICE_NAME}}-report-${{github.sha}}.html


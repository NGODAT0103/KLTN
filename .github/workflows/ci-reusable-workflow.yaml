name: ci-workflow
on:
  workflow_call:
    inputs:
      service_name:
        description: "name of the service to trigger the CI"
        required: true
        type: string
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: maven:3.9.8-eclipse-temurin-17-alpine
    services:
      share-db:
        image: postgres:16.3-bullseye
        env:
          POSTGRES_USER: share
          POSTGRES_PASSWORD: share
          POSTGRES_DB: ${{inputs.service_name}}-db
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: set up cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Running test
        working-directory: ${{inputs.service_name}}
        run: mvn test


  scan_quality_code:
    name: Scan quality
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache SonarQube packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4.0.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        working-directory: ${{inputs.service_name}}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=NGODAT0103_KLTN_469d6be5-1cc8-4567-ae29-7f3f9dc29ff6 -Dsonar.projectName='KLTN'



  scan_security:
    name: Security check
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: snyk setup
        uses: snyk/actions/setup@master
      - name: java set up
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: snky test
        working-directory: ${{inputs.service_name}}
        env:
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
        run: |
          chmod +x ./mvnw
          snyk test

  scan_vulnerability:
    name: check vulnerability
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: set up cache
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy
      - name: set up trivy
        run: | 
          wget https://github.com/aquasecurity/trivy/releases/download/v0.53.0/trivy_0.53.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.53.0_Linux-64bit.deb
      - name: trivy scan
        working-directory: ${{inputs.service_name}}
        env:
          TRIVY_USERNAME: ${{secrets.REGISTRY_USERNAME}}
          TRIVY_PASSWORD: ${{secrets.REGISTRY_PASSWORD}}
        run: trivy fs --exit-code 1 --severity HIGH,CRITICAL .
  scan_misconfig:
    name: check misconfiguration
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: set up cache trivy
        uses: actions/cache@v4.0.2
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy
      - name: set up trivy
        run: |
          wget https://github.com/aquasecurity/trivy/releases/download/v0.53.0/trivy_0.53.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.53.0_Linux-64bit.deb
      - name: trivy scan
        working-directory: ${{inputs.service_name}}
        env:
          TRIVY_USERNAME: ${{secrets.REGISTRY_USERNAME}}
          TRIVY_PASSWORD: ${{secrets.REGISTRY_PASSWORD}}
        run: trivy fs --scanners misconfig --exit-code 1 --severity HIGH,CRITICAL .

  build-and-push:
    needs: [ test,scan_security,scan_vulnerability,scan_misconfig]
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: set up buildx
        uses: docker/setup-buildx-action@v3.4.0
      - name: docker login credential
        uses: docker/login-action@v3.2.0
        with:
          registry: ${{secrets.REGISTRY_URL}}
          username: ${{github.repository_owner}}
          password: ${{github.token}}
      - name: build and push
        uses: docker/build-push-action@v6.5.0
        with:
          context: ${{inputs.service_name}}
          file: Dockerfile-for-CI
          push: true
          tags: ghcr.io/${{github.repository}}/${{inputs.service_name}}:${{github.sha}}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: service_name=${{inputs.service_name}}

  security_check:
    name: Security check for docker image
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Scan security
        id: generate-report
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{secrets.REGISTRY_URL}}/kltn/${{inputs.service_name}}:${{github.sha}}
          severity: HIGH,CRITICAL
          vuln-type: os,library
          exit-code: 1
          format: template
          template: '@/contrib/html.tpl'
          output: ${{inputs.service_name}}-report-${{github.sha}}.html
        env:
          TRIVY_USERNAME: ${{secrets.REGISTRY_USERNAME}}
          TRIVY_PASSWORD: ${{secrets.REGISTRY_PASSWORD}}
      - name: Upload ${{inputs.service_name}} security report to artifact tab
        if: ${{steps.generate-report.conclusion == 'failure'}}
        uses: actions/upload-artifact@v4.3.4
        with:
          name: ${{inputs.service_name}}-report-${{github.sha}}.html
          if-no-files-found: warn
          path: ${{inputs.service_name}}-report-${{github.sha}}.html


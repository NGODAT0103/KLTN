name: Deployment workflow
on:
  release:
    types: [created,prereleased,released]
jobs:
  get-current-version:
    name: Get current tag version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.current-version.outputs.current-v-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Get current version
        uses: reecetech/version-increment@2024.4.4
        id: current-version
        with:
          release_branch: release
          scheme: semver
          increment: patch
  gateway-svc-build-push:
    needs: [get-current-version]
    name: "Build and push gateway-svc"
    uses: ./.github/workflows/cd-workflow-call.yaml
    secrets: inherit
    with:
      SERVICE_NAME: gateway-svc
      SERVICE_PORT: 8000
      VERSION: ${{ needs.get-current-version.outputs.version }}
  auth-svc-build-push:
    needs: [ get-current-version ]
    name: "Build and push auth-svc"
    uses: ./.github/workflows/cd-workflow-call.yaml
    secrets: inherit
    with:
      SERVICE_NAME: auth-svc
      SERVICE_PORT: 8001
      VERSION: ${{ needs.get-current-version.outputs.version }}
  user-svc-build-push:
    name: "Build and push user-svc"
    needs: [ get-current-version ]
    uses: ./.github/workflows/cd-workflow-call.yaml
    secrets: inherit
    with:
      SERVICE_NAME: user-svc
      SERVICE_PORT: 8002
      VERSION: ${{ needs.get-current-version.outputs.version }}

  product-svc-build-push:
    name: "Build and push product-svc"
    needs: [ get-current-version ]
    uses: ./.github/workflows/cd-workflow-call.yaml
    secrets: inherit
    with:
      SERVICE_NAME: product-svc
      SERVICE_PORT: 8003
      VERSION: ${{ needs.get-current-version.outputs.version }}

  update-deployment-repo:
    needs: [gateway-svc-build-push, auth-svc-build-push, user-svc-build-push,product-svc-build-push, get-current-version]
    if: github.event_name == 'release'
    name: "Updating deployment repo and create pull request"
    environment: staging
    env:
      VERSION: ${{ needs.get-current-version.outputs.version }}
      STAGING_BRANCH_NAME: staging-${{needs.get-current-version.outputs.version}}
    runs-on: ubuntu-latest
    steps:
      - name: Set up credential
        uses: de-vri-es/setup-git-credentials@v2.1.2
        with:
          credentials: ${{secrets.GIT_CREDENTIALS}}
      - name: Clone deployment repo
        run: git clone https://github.com/ngodat0103/yamp-deployment.git
      - name: Create a $STAGING_BRANCH_NAME branch
        working-directory: yamp-deployment
        run: git checkout -b $STAGING_BRANCH_NAME
      - name: change version to $VERSION
        working-directory: yamp-deployment/yamp
        run: |
          sed -i "s|appVersion:.*|appVersion: $VERSION|" Chart.yaml
          helm package . --destination charts/
          helm repo index . --merge index.yaml
      - name: Commit changes and push changes
        working-directory: yamp-deployment
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]" 
          git add .
          git commit -m "Update version to $VERSION"
          git push -u origin $STAGING_BRANCH_NAME
      - name: Create a PR for $STAGING_BRANCH_NAME
        working-directory: yamp-deployment
        env:
          GITHUB_TOKEN: ${{secrets.PET_TOKEN}}
        run: |
          gh pr create --base master --head $STAGING_BRANCH_NAME --title "[bot]: Update version to $VERSION" --body "Update version to $VERSION"
      - name: Clean up
        run: rm -rf yamp-deployment
